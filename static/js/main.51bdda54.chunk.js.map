{"version":3,"sources":["assets/images/global_compact.svg","assets/images/itn.svg","assets/images/shid_logo.svg","assets/images/facts-slide-1.jpg","assets/images/facts-slide-2.jpg","assets/images/facts-slide-3.jpg","assets/images/facts-slide-4.jpg","assets/images/facts-slide-5.jpg","assets/images/sectors/industry.jpg","assets/images/sectors/transport.jpg","assets/images/sectors/city_planing.jpg","assets/images/sectors/energy.jpg","assets/images/sectors/energetics.jpg","assets/images/sectors/utilisation.jpg","components/HeroBlock/HeroBlock.js","components/Facts/SlideFacts.js","components/Facts/Facts.js","components/AirQuality/AirQuality.js","components/SectorsList/SectorItem.js","components/SectorsList/SectorsList.js","components/Footer/Footer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","HeroBlock","title","logos","links","logosImages","map","logoItem","i","src","alt","className","key","navItems","link","href","SlideFacts","item","imgUrl","desc","SwiperCore","use","Navigation","Pagination","Facts","factsSlides","slides","slideInfo","id","navigation","nextEl","prevEl","pagination","el","clickable","renderBullet","index","spaceBetween","slidesPerView","slidesPerGroup","centeredSlides","mapboxgl","accessToken","AirQuality","mapContainer","useRef","useState","lng","lat","zoom","locationInfo","useEffect","Map","container","current","style","center","ref","SectorItem","sector","number","isToolTipShowing","setToolTipShowing","isDirectionSwitched","setDirectionSwitched","toggleToolTip","newValue","onMouseEnter","onMouseLeave","background","backgroundSize","name","description","SectorsList","subtitle","itemsList","items","Footer","partners","author","designer","partnersLogos","logo","navLinks","App","shidLogo","itnLogo","gcLogo","require","sectors","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.51bdda54.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/global_compact.0662d9de.svg\";","module.exports = __webpack_public_path__ + \"static/media/itn.2f311a05.svg\";","module.exports = __webpack_public_path__ + \"static/media/shid_logo.341a487c.svg\";","module.exports = __webpack_public_path__ + \"static/media/facts-slide-1.05494e5f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/facts-slide-2.6a925988.jpg\";","module.exports = __webpack_public_path__ + \"static/media/facts-slide-3.f6b33149.jpg\";","module.exports = __webpack_public_path__ + \"static/media/facts-slide-4.4f70b1ad.jpg\";","module.exports = __webpack_public_path__ + \"static/media/facts-slide-5.4e538524.jpg\";","module.exports = __webpack_public_path__ + \"static/media/industry.5ec44869.jpg\";","module.exports = __webpack_public_path__ + \"static/media/transport.65643b05.jpg\";","module.exports = __webpack_public_path__ + \"static/media/city_planing.f8f67844.jpg\";","module.exports = __webpack_public_path__ + \"static/media/energy.fb084e1e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/energetics.43f9dac6.jpg\";","module.exports = __webpack_public_path__ + \"static/media/utilisation.a8b6caee.jpg\";","import React from 'react'\r\nimport './HeroBlock.scss'\r\n\r\nconst HeroBlock = ({title, logos, links}) => {\r\n    const logosImages = logos.map((logoItem, i) => <img src={logoItem} alt=\"partner-logo\" className=\"hero__partners-item\" key={i}/>);\r\n    const navItems = links.map((link, i) => <a href={link.href} className=\"hero__navigation-item\" key={i}>{link.title}</a>);\r\n\r\n    return (\r\n        <section className=\"hero\">\r\n            <div className=\"container\">\r\n                <div className=\"hero__partners\">\r\n                    {logosImages}\r\n                </div>\r\n                <nav className=\"hero__navigation\">\r\n                    {navItems}\r\n                </nav>\r\n                <h1 className=\"hero__title\">{title}</h1>\r\n                <a href=\"#\" className=\"hero__link\">Отследить</a>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default HeroBlock\r\n","import React from 'react'\r\n\r\nconst SlideFacts = ({item}) => {\r\n    return (\r\n        <div className=\"facts__slide\">\r\n            <img src={item.imgUrl} alt=\"slide image\"/>\r\n            <p className=\"facts__slide-desc\">\r\n                {item.desc}\r\n            </p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SlideFacts\r\n","import React from 'react';\r\nimport SlideFacts from \"./SlideFacts\";\r\nimport SwiperCore, {Navigation, Pagination} from 'swiper';\r\nimport {Swiper, SwiperSlide } from 'swiper/react';\r\nimport 'swiper/swiper.scss';\r\nimport 'swiper/components/navigation/navigation.scss';\r\nimport 'swiper/components/pagination/pagination.scss';\r\nimport './Facts.scss';\r\n\r\n\r\nSwiperCore.use([Navigation, Pagination])\r\n\r\nconst Facts = ({title, slides}) => {\r\n    const factsSlides = slides.map((slideInfo) => <SwiperSlide key={slideInfo.id}>\r\n        <SlideFacts item={slideInfo} />\r\n        </SwiperSlide>);\r\n\r\n    return (\r\n        <section className=\"facts container\">\r\n            <h2 className=\"facts__title\">{title}</h2>\r\n            <div className=\"swiper-button-prev\"/>\r\n            <Swiper\r\n                navigation={{\r\n                    nextEl: '.swiper-button-next',\r\n                    prevEl: '.swiper-button-prev',\r\n                }}\r\n                pagination={{\r\n                    el: '.facts__pagination',\r\n                    clickable: true,\r\n                    renderBullet: function(index, className) {\r\n                        return `<span class=\"facts__pagination-bullet ${className}\"></span>`;\r\n                    },\r\n                }}\r\n                spaceBetween={40}\r\n                slidesPerView={3}\r\n                slidesPerGroup={3}\r\n                centeredSlides={true}\r\n            >\r\n                {factsSlides}\r\n            </Swiper>\r\n            <div className=\"swiper-button-next\"/>\r\n            <div className=\"facts__pagination\"/>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Facts\r\n","import React, {useEffect, useRef, useState} from 'react';\r\nimport mapboxgl from 'mapbox-gl';\r\nimport './AirQuality.scss';\r\nimport 'mapbox-gl/dist/mapbox-gl.css';\r\n\r\nmapboxgl.accessToken = 'pk.eyJ1IjoieWFtbnlrIiwiYSI6ImNrZmxhZjZscjAwb2gycm54aWo2bGJvZnEifQ.BbYutmem-GZtYciYeMln1A';\r\n\r\nconst AirQuality = () => {\r\n\tconst mapContainer = useRef(null);\r\n\tconst [locationInfo] = useState({\r\n\t\tlng: 31,\r\n\t\tlat: 48.3,\r\n\t\tzoom: 5\r\n\t});\r\n\t\r\n\tuseEffect(() => {\r\n\t\tconst map = new mapboxgl.Map({\r\n\t\t\tcontainer: mapContainer.current,\r\n\t\t\tstyle: 'mapbox://styles/mapbox/outdoors-v11',\r\n\t\t\tcenter: [locationInfo.lng, locationInfo.lat],\r\n\t\t\tzoom: locationInfo.zoom\r\n\t\t});\r\n\t}, [])\r\n\t\r\n\treturn (\r\n\t\t<section className={'air-q container'}>\r\n\t\t\t<h2 className=\"air-q__title\">Индекс качества воздуха в режиме реального времени</h2>\r\n\t\t\t\r\n\t\t\t<div className=\"air-q__map\" ref={mapContainer}/>\r\n\t\t\t\r\n\t\t\t<p className=\"air-q__text\">Для того чтобы узнать уровень загрязнения атмосферного воздуха (качество воздуха) в городе Киев, необходимо выбрать соответствующую станцию мониторинга на карте выше.</p>\r\n\t\t</section>\r\n\t);\r\n};\r\n\r\nexport default AirQuality;","import React, {useState} from 'react'\r\n\r\nconst SectorItem = ({sector, number}) => {\r\n    const [isToolTipShowing, setToolTipShowing] = useState(false);\r\n    const [isDirectionSwitched, setDirectionSwitched] = useState(false)\r\n    const toggleToolTip = (newValue) => {\r\n        setDirectionSwitched(number % 3 === 0);\r\n        setToolTipShowing(newValue);\r\n    }\r\n    //const toggleToolTip = () => {\r\n        //setToolTipShowing(\r\n            //!isToolTipShowing\r\n        //)\r\n    //}\r\n\r\n    return (\r\n        <div className=\"sectors__list-item\" \r\n            onMouseEnter={() => toggleToolTip(true)}\r\n            onMouseLeave={() => toggleToolTip(false)}\r\n            style={{\r\n                background: `url(${sector.imgUrl}) center no-repeat`, \r\n                backgroundSize: 'cover'\r\n            }}>\r\n        \r\n            <p className=\"sectors__list-item-name\">\r\n                {sector.name}\r\n            </p>\r\n            {\r\n                isToolTipShowing && <p className={`sectors__list-item-tooltip ${\r\n                    isDirectionSwitched\r\n                        ? \"sectors__list-item-tooltip-switched\"\r\n                        : \"\"\r\n                }`}>\r\n                    {sector.description}\r\n                </p>\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SectorItem\r\n","import React from 'react';\r\nimport './SectorsList.scss';\r\nimport SectorItem from \"./SectorItem\";\r\n\r\nconst SectorsList = ({title, subtitle, items}) => {\r\n    const itemsList = items.map((sector, i) => <SectorItem sector={sector} number={i+1} key={i}/>)\r\n    return (\r\n        <section className=\"sectors container\">\r\n            <h2 className=\"sectors__title\">{title}</h2>\r\n            <p className=\"sectors__subtitle\">{subtitle}</p>\r\n            <div className=\"sectors__list\">\r\n                {itemsList}\r\n            </div>\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default SectorsList\r\n","import React from 'react';\r\nimport './Footer.scss';\r\n\r\nconst Footer = ({partners, links, author, designer}) => {\r\n\tconst partnersLogos = partners.map((logo, i) => <img key={i} src={logo} alt={'partner logo'}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t className=\"footer__partners-item\"/>);\r\n\tconst navLinks = links.map((link, i) => <a href={link.href} key={i} className={'footer__nav-link'}>{link.title}</a>)\r\n\t\r\n\treturn (\r\n\t\t<footer className=\"footer\">\r\n\t\t\t<div className=\"container\">\r\n\t\t\t\t<div className=\"footer__partners\">\r\n\t\t\t\t\t{partnersLogos}\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t\t<div className=\"footer__text-wrap\">\r\n\t\t\t\t\t<div className=\"footer__nav\">\r\n\t\t\t\t\t\t{navLinks}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<p className=\"footer__nav-text\">\r\n\t\t\t\t\t\tСайт был разработан <span className=\"text-yellow\">{author}</span> в учебных целях, в рамках образовательной программы IT nation. Дизайн сайта создан <span className=\"text-yellow\">{designer}</span>.\r\n\t\t\t\t\t</p>\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t\t<p className=\"footer__text\">\r\n\t\t\t\t\t2020, Все права защищены\r\n\t\t\t\t</p>\r\n\t\t\t\t<p className=\"footer__text\">\r\n\t\t\t\t\tСогласие на обработку персональных данных <br/>\r\n\t\t\t\t\tПолитика конфиденциальности\r\n\t\t\t\t</p>\r\n\t\t\t</div>\r\n\t\t</footer>\r\n\t);\r\n};\r\n\r\nexport default Footer;\r\n","import React from 'react';\nimport './App.scss';\nimport HeroBlock from './components/HeroBlock/HeroBlock';\nimport Facts from './components/Facts/Facts';\nimport AirQuality from \"./components/AirQuality/AirQuality\";\nimport SectorsList from \"./components/SectorsList/SectorsList\";\nimport Footer from \"./components/Footer/Footer\";\nimport gcLogo from './assets/images/global_compact.svg';\nimport itnLogo from './assets/images/itn.svg';\nimport shidLogo from './assets/images/shid_logo.svg';\n\nfunction App() {\n  const partners = [\n    shidLogo,\n    itnLogo,\n    gcLogo\n  ];\n  const navLinks = [\n    {\n      title: \"Основные факты\",\n      href: \"#facts\"\n    },\n    {\n      title: \"Индекс качества воздуха\",\n      href: \"#quality\"\n    },\n    {\n      title: \"Политика по уменьшению загрязнений\",\n      href: \"#politics\"\n    }\n  ];\n  const factsSlides = [\n    {\n      id: '1332',\n      imgUrl: require(\"./assets/images/facts-slide-1.jpg\"),\n      desc: \"Женщины и дети – главные жертвы загрязнения воздуха\"\n    },\n    {\n      id: '1333',\n      imgUrl: require(\"./assets/images/facts-slide-2.jpg\"),\n      desc: \"Защитники окружающей среды подвергаются преследованиям\"\n    },\n    {\n      id: '1334',\n      imgUrl: require(\"./assets/images/facts-slide-3.jpg\"),\n      desc: \"Загрязнение воздуха – нарушение прав человека\"\n    },\n    {\n      id: '1335',\n      imgUrl: require(\"./assets/images/facts-slide-4.jpg\"),\n      desc: \"4,2 миллиона случаев преждевременной смерти людей из-за загрязнения атмосферного воздуха\"\n    },\n    {\n      id: '1336',\n      imgUrl: require(\"./assets/images/facts-slide-5.jpg\"),\n      desc: \"Согласно оценкам, суммарный объем затрат в связи с загрязнением воздуха превышает 5 трлн долл. в год.\"\n    }\n  ];\n  const sectors = [\n    {\n      name: \"Промышленность\",\n      imgUrl: require('./assets/images/sectors/industry.jpg'),\n      description: \"Чистые технологии, способствующие уменьшению выбросов из промышленных дымовых труб; улучшенная утилизация городских и сельскохозяйственных отходов, включая каптаж (улавливание) метана, выделяемого в местах утилизации отходов, в качестве варианта, альтернативного сжиганию (для использования в качестве биогаза)\"\n    }, \n    {\n      name: \"Транспорт\",\n      imgUrl: require('./assets/images/sectors/transport.jpg'),\n      description: \"Переход к чистым способам выработки энергии; уделение приоритетного внимания скоростному городскому транспорту, пешеходным и велосипедным сетям в городах, а также железнодорожным междугородным грузовым и пассажирским перевозкам; переход к использованию более чистых большегрузных дизельных транспортных средств и автомобилей с низким уровнем выбросов, а также более чистых видов топлива, включая топливо со сниженной концентрацией серы\"\n    },   \n    {\n      name: \"Городское планирование\",\n      imgUrl: require('./assets/images/sectors/city_planing.jpg'),\n      description: \"Улучшение энергетической эффективности зданий и обеспечение более зеленых и компактных и тем самым более энергоэффективных городов\"\n    },   \n    {\n      name: \"Энергия\",\n      imgUrl: require('./assets/images/sectors/energy.jpg'),\n      description: \"Обеспечение доступа к недорогостоящим источникам энергии в быту для приготовления пищи, отопления и освещения\"\n    },   \n    {\n      name: \"Энергетика\",\n      imgUrl: require('./assets/images/sectors/energetics.jpg'),\n      description: \" Более широкое использование видов топлива с низким уровнем выбросов и возобновляемых источников энергии, не основанных на сжигании (таких как энергия солнца, ветра или гидроэнергия); комбинированная выработка тепла и энергии; и распределенная выработка энергии (например, энергетические минисистемы и размещаемые на крыше установки для выработки энергии из солнечной энергии)\"\n    },     \n    {\n      name: \"Утилизация отходов\",\n      imgUrl: require('./assets/images/sectors/utilisation.jpg'),\n      description: \"Стратегии уменьшения отходов, сортировки отходов, рециклирования, повторного использования или переработки отходов; а также улучшенные методы биологической утилизации отходов, такие как анаэробная переработка отходов для производства биогаза, являются практически осуществимыми, недорогими альтернативными вариантами открытому сжиганию твердых отходов\"\n    }    \n  ];\n\n  const author = \"Никитой Ямником\";\n\tconst designer = \"Валерией Бубырь\";\n\n  return (\n    <>\n\n     <HeroBlock title=\"Качество атмосферного воздуха и здоровье\"\n                logos={partners}\n                links={navLinks}/>\n\n      <Facts title=\"Основные факты\" slides={factsSlides}/>\n      <AirQuality/>\n      <SectorsList title=\"Политика по уменьшению загрязнений\"\n                   subtitle=\"Есть много примеров успешной политики по уменьшению загрязнения воздуха в таких секторах, как транспорт, городское планирование, энергетика и промышленность:\"\n                   items={sectors}/>\n      <Footer links={navLinks} partners={partners} author={author} designer={designer} />\n\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}